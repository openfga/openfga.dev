"use strict";(self.webpackChunkopenfga_dev=self.webpackChunkopenfga_dev||[]).push([[6014],{8317:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>u,frontMatter:()=>n,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"content/best-practices/source-of-truth","title":"Source of Truth","description":"Deciding where to store the \\"source of truth\\" for authorization data","source":"@site/docs/content/best-practices/source-of-truth.mdx","sourceDirName":"content/best-practices","slug":"/best-practices/source-of-truth","permalink":"/pr-preview/pr-1131/docs/best-practices/source-of-truth","draft":false,"unlisted":false,"editUrl":"https://github.com/openfga/openfga.dev/edit/main/docs/content/best-practices/source-of-truth.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Source of Truth","sidebar_position":3,"slug":"/best-practices/source-of-truth","description":"Deciding where to store the \\"source of truth\\" for authorization data"},"sidebar":"docs","previous":{"title":"Modeling Roles","permalink":"/pr-preview/pr-1131/docs/best-practices/modeling-roles"},"next":{"title":"Running OpenFGA in Production","permalink":"/pr-preview/pr-1131/docs/best-practices/running-in-production"}}');var s=o(74848),i=o(28453),a=o(25558);const n={title:"Source of Truth",sidebar_position:3,slug:"/best-practices/source-of-truth",description:'Deciding where to store the "source of truth" for authorization data'},c="When to use  as the 'source of truth' for authorization data",h={},d=[];function l(e){const t={a:"a",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsxs)(t.h1,{id:"when-to-use--as-the-source-of-truth-for-authorization-data",children:["When to use ",(0,s.jsx)(a.bU,{format:a.Ed.ShortForm})," as the 'source of truth' for authorization data"]})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(a.bU,{format:a.Ed.ShortForm})," is inspired by ",(0,s.jsx)(t.a,{href:"https://research.google/pubs/zanzibar-googles-consistent-global-authorization-system/",children:"Google\u2019s Zanzibar"}),". In Google\u2019s architecture, Zanzibar is an extremely efficient system for authorization checks, but it's never the source of truth for application data. The ",(0,s.jsx)(t.a,{href:"https://openfga.dev/docs/interacting/relationship-queries#read",children:"Read endpoint"})," is mostly used when you need to inspect the stored data, e.g. for troubleshooting consistency issues."]}),"\n",(0,s.jsxs)(t.p,{children:["For developers using ",(0,s.jsx)(a.bU,{format:a.Ed.ShortForm}),", following Google's approach isn't always practical. In most cases, applications will use ",(0,s.jsx)(a.bU,{format:a.Ed.ShortForm})," as the source of truth for some data."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.strong,{children:["When ",(0,s.jsx)(a.bU,{format:a.Ed.ShortForm}),"  is not the right source of truth:"]})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"User data: The source of truth for user profile data is typically an identity provider like Azure, Okta or Auth0."}),"\n",(0,s.jsxs)(t.li,{children:["Entity hierarchies: Structures like project/tickets or folder/documents already live in application's databases. Repeatedly querying ",(0,s.jsx)(a.bU,{format:a.Ed.ShortForm})," just to navigate that hierarchy would be inefficient. Having this in the application's database would allow for better optimizations when searching within a folder (see: ",(0,s.jsx)(t.a,{href:"/pr-preview/pr-1131/docs/interacting/search-with-permissions",children:"search with permissions"}),"), as it would let the applications narrow down the scope of what it needs to check, and then call check in parallel instead of filtering through other methods."]}),"\n",(0,s.jsxs)(t.li,{children:["Data relevant for search and filtering: When performing searches, you need to combine data that's on your database and data that's in ",(0,s.jsx)(a.bU,{format:a.Ed.ShortForm}),". Your application's database is the right place to do filtering/sorting/joins. The data required for performing those operations should live in application's databases."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"When OpenFGA is a good source of truth:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Fine-grained permissions: If an application allows users to assign permissions directly to resources (e.g., sharing a document), and you don't need to store that data in the application's database, you can store it only in ",(0,s.jsx)(a.bU,{format:a.Ed.ShortForm}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Role membership: If you are not using another system to manage roles, storing role membership in ",(0,s.jsx)(a.bU,{format:a.Ed.ShortForm})," is reasonable. Remember that ",(0,s.jsx)(a.bU,{format:a.Ed.ShortForm})," does not store role metadata (like names or descriptions), so you'll still need a 'Roles' table in your application's database."]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);