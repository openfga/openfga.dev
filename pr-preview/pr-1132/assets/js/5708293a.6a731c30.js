"use strict";(self.webpackChunkopenfga_dev=self.webpackChunkopenfga_dev||[]).push([[9188],{31581:e=>{e.exports=JSON.parse('{"permalink":"/pr-preview/pr-1132/blog/ignore-duplicate-writes-announcement","source":"@site/blog/ignore-duplicate-writes-announcement.md","title":"Ignore Duplicate Tuples On Write","description":"OpenFGA now supports ignoring duplicate writes and missing deletes, making data imports much easier and more efficient.","date":"2025-10-31T00:00:00.000Z","tags":[{"inline":true,"label":"openfga","permalink":"/pr-preview/pr-1132/blog/tags/openfga"},{"inline":true,"label":"features","permalink":"/pr-preview/pr-1132/blog/tags/features"},{"inline":true,"label":"write-api","permalink":"/pr-preview/pr-1132/blog/tags/write-api"}],"readingTime":2.09,"hasTruncateMarker":false,"authors":[{"name":"Tyler Nix","title":"Product Manager","url":"https://github.com/tylernix","imageURL":"/pr-preview/pr-1132/img/blog/authors/tyler.jpg","key":"tylernix","page":null}],"frontMatter":{"title":"Ignore Duplicate Tuples On Write","description":"OpenFGA now supports ignoring duplicate writes and missing deletes, making data imports much easier and more efficient.","slug":"ignore-duplicate-writes-announcement","date":"2025-10-31T00:00:00.000Z","authors":"tylernix","tags":["openfga","features","write-api"],"image":"https://openfga.dev/img/og-rich-embed.png","hide_table_of_contents":false},"unlisted":false,"nextItem":{"title":"Fine-Grained News - October 2025","permalink":"/pr-preview/pr-1132/blog/fine-grained-news-2025-10"}}')},51689:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var i=t(31581),r=t(74848),s=t(28453);const o={title:"Ignore Duplicate Tuples On Write",description:"OpenFGA now supports ignoring duplicate writes and missing deletes, making data imports much easier and more efficient.",slug:"ignore-duplicate-writes-announcement",date:new Date("2025-10-31T00:00:00.000Z"),authors:"tylernix",tags:["openfga","features","write-api"],image:"https://openfga.dev/img/og-rich-embed.png",hide_table_of_contents:!1},a='Announcing "Ignore Duplicate Writes" in OpenFGA',l={authorsImageUrls:[void 0]},d=[{value:"The Problem",id:"the-problem",level:2},{value:"The Solution",id:"the-solution",level:2},{value:"See it in Action",id:"see-it-in-action",level:2},{value:"Get Started",id:"get-started",level:2},{value:"We want your feedback!",id:"we-want-your-feedback",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["We've added two new optional parameters to the Write API endpoint to improve the experience of writing data to FGA. You can now gracefully ",(0,r.jsx)(n.a,{href:"https://openfga.dev/docs/getting-started/update-tuples#05-ignoring-duplicate-or-missing-tuples",children:'"ignore" duplicate writes and missing deletes'}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"the-problem",children:"The Problem"}),"\n",(0,r.jsxs)(n.p,{children:["When you're writing tuples to OpenFGA, it's almost inevitable that you'll try to write a relationship tuple that already exists (e.g., ",(0,r.jsx)(n.code,{children:"user:anne"})," is already a ",(0,r.jsx)(n.code,{children:"viewer"})," of ",(0,r.jsx)(n.code,{children:"document:123"}),") or try to delete one that's already gone. In the past, OpenFGA would reject the entire Write request containing that single duplicate operation."]}),"\n",(0,r.jsx)(n.p,{children:"This forced developers to build complex error-handling and retry logic on the client-side, just to filter out the single problematic tuple and resend the rest of the batch. This adds latency and operational overhead."}),"\n",(0,r.jsx)(n.h2,{id:"the-solution",children:"The Solution"}),"\n",(0,r.jsx)(n.p,{children:"The Write API now accepts two new optional parameters to gracefully handle these use cases:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:'on_duplicate: "ignore"'})}),": When included in the ",(0,r.jsx)(n.code,{children:"writes"})," section, this tells OpenFGA to simply skip any tuples that already exist instead of failing the request."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:'on_missing: "ignore"'})}),": When included in the ",(0,r.jsx)(n.code,{children:"deletes"})," section, this tells OpenFGA to skip any tuples that don't exist."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Now, you can send large batches of writes and deletes without worrying about these common conditions breaking your import."}),"\n",(0,r.jsx)(n.h2,{id:"see-it-in-action",children:"See it in Action"}),"\n",(0,r.jsx)(n.p,{children:"Here's an example cURL request showing the new parameters:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\\n  -H "Authorization: Bearer $FGA_API_TOKEN" \\\n  -H "content-type: application/json" \\\n  -d \'{\n  "writes": {\n    "tuple_keys": [\n      {\n        "user": "user:anne",\n        "relation": "viewer",\n        "object": "document:123"\n      }\n    ],\n    "on_duplicate": "ignore"\n  },\n  "deletes": {\n    "tuple_keys": [\n      {\n        "user": "user:anne",\n        "relation": "owner",\n        "object": "document:123"\n      }\n    ],\n    "on_missing": "ignore" \n  }\n}\'\n'})}),"\n",(0,r.jsx)(n.h2,{id:"get-started",children:"Get Started"}),"\n",(0,r.jsx)(n.p,{children:"Try it out and let us know what you think!"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/openfga/java-sdk?tab=readme-ov-file#conflict-options-for-write-operations",children:"Java SDK"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/openfga/dotnet-sdk?tab=readme-ov-file#conflict-options-for-write-operations",children:".NET SDK"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/openfga/python-sdk?tab=readme-ov-file#conflict-options-for-write-operations",children:"Python SDK"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/openfga/go-sdk?tab=readme-ov-file#conflict-options-for-write-operations",children:"Go SDK"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/openfga/js-sdk?tab=readme-ov-file#conflict-options-for-write-operations",children:"JavaScript SDK"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Special thanks to ",(0,r.jsx)(n.a,{href:"https://github.com/phamhieu",children:"@phamhieu"})," for his ",(0,r.jsx)(n.a,{href:"https://github.com/openfga/js-sdk/pull/276",children:"contribution"})," to the JavaScript SDK! \ud83d\ude4f"]}),"\n",(0,r.jsxs)(n.p,{children:["Learn more about ",(0,r.jsx)(n.a,{href:"https://openfga.dev/docs/getting-started/update-tuples#05-ignoring-duplicate-or-missing-tuples",children:"Writing Tuples in OpenFGA"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"we-want-your-feedback",children:"We want your feedback!"}),"\n",(0,r.jsxs)(n.p,{children:["Please reach out through our ",(0,r.jsx)(n.a,{href:"https://openfga.dev/docs/community",children:"community channels"})," with any questions or feedback."]})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);