name: Deploy to GitHub Pages

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          lfs: true  # LFS required for building with images/assets
          fetch-depth: 1

      - name: Setup and build
        uses: ./.github/actions/setup-and-build
        with:
          build-analytics-id: ${{ secrets.HUBSPOT_TRACKING_ID }}

      - name: Create CNAME file
        run: echo "openfga.dev" > ./build/CNAME

      - name: Preserve PR previews from gh-pages
        timeout-minutes: 5
        run: |
          # Clone the gh-pages branch with authentication to avoid rate limits and support private repos
          if git clone --branch gh-pages --single-branch --depth 1 \
            https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git gh-pages-temp 2>/dev/null; then
            
            # Copy pr-preview directory if it exists
            if [ -d "gh-pages-temp/pr-preview" ]; then
              echo "Preserving PR previews..."
              cp -r gh-pages-temp/pr-preview ./build/
              # Count actual PR preview directories (excluding parent)
              preview_count=$(find ./build/pr-preview -mindepth 1 -maxdepth 1 -type d 2>/dev/null | wc -l)
              echo "Preserved ${preview_count} PR preview(s)"
            else
              echo "No PR previews to preserve"
            fi
            
            # Clean up temp directory
            rm -rf gh-pages-temp
          else
            echo "No gh-pages branch found or unable to clone - this is normal for first deployment"
          fi

      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0

      - name: Upload artifact
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4.0.0
        with:
          path: ./build

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
